version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: servertv_postgres
    environment:
      POSTGRES_DB: servertv
      POSTGRES_USER: servertv_user
      POSTGRES_PASSWORD: servertv_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - servertv_network

  # Backend Node.js com NestJS
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: servertv_backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://servertv_user:servertv_password@postgres:5432/servertv
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 24h
      PORT: 3000
    volumes:
      - ./videos:/app/videos
      - ./logs:/app/logs
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    networks:
      - servertv_network

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: servertv_frontend
    environment:
      REACT_APP_API_URL: http://localhost:3000/api
    ports:
      - "3001:3000"
    depends_on:
      - backend
    networks:
      - servertv_network

  # FFmpeg para transcodificação
  ffmpeg:
    image: jrottenberg/ffmpeg:4.4-alpine
    container_name: servertv_ffmpeg
    volumes:
      - ./videos:/videos
      - ./scripts:/scripts
    networks:
      - servertv_network
    profiles:
      - transcoding

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: servertv_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./videos:/var/www/videos
    depends_on:
      - backend
      - frontend
    networks:
      - servertv_network

volumes:
  postgres_data:
    driver: local

networks:
  servertv_network:
    driver: bridge
