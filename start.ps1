# Script de inicializa√ß√£o para ServerTV (Windows PowerShell)
# Uso: .\start.ps1

Write-Host "üöÄ Iniciando ServerTV - Sistema de Streaming de V√≠deos" -ForegroundColor Cyan
Write-Host "==================================================" -ForegroundColor Cyan

# Verificar se Docker est√° instalado
if (-not (Get-Command docker -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå Docker n√£o est√° instalado. Por favor, instale o Docker primeiro." -ForegroundColor Red
    exit 1
}

if (-not (Get-Command docker-compose -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå Docker Compose n√£o est√° instalado. Por favor, instale o Docker Compose primeiro." -ForegroundColor Red
    exit 1
}

# Criar diret√≥rios necess√°rios
Write-Host "üìÅ Criando diret√≥rios necess√°rios..." -ForegroundColor Yellow
New-Item -ItemType Directory -Force -Path "videos" | Out-Null
New-Item -ItemType Directory -Force -Path "logs" | Out-Null
New-Item -ItemType Directory -Force -Path "backups" | Out-Null

# Verificar se o arquivo .env existe
if (-not (Test-Path ".env")) {
    Write-Host "‚öôÔ∏è  Criando arquivo de configura√ß√£o..." -ForegroundColor Yellow
    Copy-Item "env.example" ".env"
    Write-Host "‚úÖ Arquivo .env criado. Voc√™ pode edit√°-lo se necess√°rio." -ForegroundColor Green
}

# Parar containers existentes
Write-Host "üõë Parando containers existentes..." -ForegroundColor Yellow
docker-compose down

# Limpar cache do Docker
Write-Host "üßπ Limpando cache do Docker..." -ForegroundColor Yellow
docker system prune -f

# Construir e iniciar os servi√ßos
Write-Host "üî® Construindo e iniciando servi√ßos..." -ForegroundColor Yellow
docker-compose up -d --build --force-recreate

# Aguardar os servi√ßos iniciarem
Write-Host "‚è≥ Aguardando servi√ßos iniciarem..." -ForegroundColor Yellow
Start-Sleep -Seconds 60

# Verificar status dos servi√ßos
Write-Host "üîç Verificando status dos servi√ßos..." -ForegroundColor Yellow
docker-compose ps

# Verificar se todos os servi√ßos est√£o rodando
Write-Host "üîç Verificando sa√∫de dos servi√ßos..." -ForegroundColor Yellow
$services = @("postgres", "backend", "frontend", "nginx")
foreach ($service in $services) {
    $status = docker-compose ps | Select-String "$service.*Up"
    if ($status) {
        Write-Host "‚úÖ $service est√° rodando" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $service n√£o est√° rodando" -ForegroundColor Red
        Write-Host "Logs do $service:" -ForegroundColor Yellow
        docker-compose logs --tail=20 $service
    }
}

Write-Host ""
Write-Host "üéâ ServerTV iniciado com sucesso!" -ForegroundColor Green
Write-Host ""
Write-Host "üì± Acesse o sistema:" -ForegroundColor Cyan
Write-Host "   Frontend: http://localhost:3001" -ForegroundColor White
Write-Host "   API: http://localhost:3000/api" -ForegroundColor White
Write-Host "   Documenta√ß√£o: http://localhost:3000/api/docs" -ForegroundColor White
Write-Host "   Proxy: http://localhost:80" -ForegroundColor White
Write-Host ""
Write-Host "üë§ Credenciais padr√£o:" -ForegroundColor Cyan
Write-Host "   Email: admin@servertv.com" -ForegroundColor White
Write-Host "   Senha: admin123" -ForegroundColor White
Write-Host ""
Write-Host "üìä Para monitorar os servi√ßos:" -ForegroundColor Cyan
Write-Host "   docker-compose logs -f" -ForegroundColor White
Write-Host ""
Write-Host "üõë Para parar os servi√ßos:" -ForegroundColor Cyan
Write-Host "   docker-compose down" -ForegroundColor White
Write-Host ""
Write-Host "üîÑ Para reiniciar os servi√ßos:" -ForegroundColor Cyan
Write-Host "   docker-compose restart" -ForegroundColor White
