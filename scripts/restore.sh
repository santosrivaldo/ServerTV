#!/bin/bash

# Script de restaura√ß√£o para ServerTV
# Uso: ./restore.sh <backup_dir>

BACKUP_DIR="$1"

if [ -z "$BACKUP_DIR" ]; then
    echo "Uso: $0 <backup_dir>"
    echo "Exemplo: $0 ./backups/servertv_backup_20231201_120000"
    exit 1
fi

if [ ! -d "$BACKUP_DIR" ]; then
    echo "‚ùå Diret√≥rio de backup n√£o encontrado: $BACKUP_DIR"
    exit 1
fi

echo "üîÑ Iniciando restaura√ß√£o do ServerTV..."
echo "   Backup: $BACKUP_DIR"

# Verificar se os servi√ßos est√£o rodando
if ! docker-compose ps | grep -q "Up"; then
    echo "‚ö†Ô∏è  Servi√ßos n√£o est√£o rodando. Iniciando..."
    docker-compose up -d
    sleep 10
fi

echo "üóÑÔ∏è  Restaurando banco de dados..."
if [ -f "$BACKUP_DIR/database.sql" ]; then
    docker-compose exec -T postgres psql -U servertv_user -d servertv -c "DROP SCHEMA public CASCADE; CREATE SCHEMA public;"
    docker-compose exec -T postgres psql -U servertv_user -d servertv < "$BACKUP_DIR/database.sql"
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ Banco de dados restaurado com sucesso"
    else
        echo "‚ùå Erro na restaura√ß√£o do banco de dados"
        exit 1
    fi
else
    echo "‚ö†Ô∏è  Arquivo database.sql n√£o encontrado"
fi

echo "üìÅ Restaurando v√≠deos..."
if [ -f "$BACKUP_DIR/videos.tar.gz" ]; then
    # Parar servi√ßos que usam v√≠deos
    docker-compose stop backend frontend nginx
    
    # Remover diret√≥rio atual de v√≠deos
    rm -rf ./videos
    
    # Extrair backup
    tar -xzf "$BACKUP_DIR/videos.tar.gz"
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ V√≠deos restaurados com sucesso"
    else
        echo "‚ùå Erro na restaura√ß√£o dos v√≠deos"
        exit 1
    fi
    
    # Reiniciar servi√ßos
    docker-compose up -d
else
    echo "‚ö†Ô∏è  Arquivo videos.tar.gz n√£o encontrado"
fi

echo "üìã Restaurando logs..."
if [ -f "$BACKUP_DIR/logs.tar.gz" ]; then
    tar -xzf "$BACKUP_DIR/logs.tar.gz"
    echo "‚úÖ Logs restaurados com sucesso"
else
    echo "‚ö†Ô∏è  Arquivo logs.tar.gz n√£o encontrado"
fi

echo "‚öôÔ∏è  Restaurando configura√ß√µes..."
if [ -f "$BACKUP_DIR/docker-compose.yml" ]; then
    cp "$BACKUP_DIR/docker-compose.yml" ./docker-compose.yml.backup
    echo "‚úÖ Configura√ß√£o do Docker salva como backup"
fi

if [ -f "$BACKUP_DIR/nginx.conf" ]; then
    cp "$BACKUP_DIR/nginx.conf" ./nginx/nginx.conf.backup
    echo "‚úÖ Configura√ß√£o do Nginx salva como backup"
fi

echo "üîÑ Reiniciando servi√ßos..."
docker-compose restart

echo "‚è≥ Aguardando servi√ßos iniciarem..."
sleep 15

echo "üîç Verificando status dos servi√ßos..."
docker-compose ps

echo "üéâ Restaura√ß√£o conclu√≠da!"
echo "   Verifique se todos os servi√ßos est√£o rodando: docker-compose ps"
echo "   Acesse o sistema em: http://localhost:3001"
